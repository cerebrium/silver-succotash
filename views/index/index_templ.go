// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package index

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Index() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html><head><title>Login</title><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><!-- Clerk Publishable key and Frontend API URL --><script async crossorigin=\"anonymous\" data-clerk-publishable-key=\"pk_test_Zmx5aW5nLWNvcmFsLTgyLmNsZXJrLmFjY291bnRzLmRldiQ\" src=\"https://flying-coral-82.clerk.accounts.dev/npm/@clerk/clerk-js@latest/dist/clerk.browser.js\" type=\"text/javascript\"></script><script src=\"/assets/js/htmx.min.js\"></script><link href=\"/assets/css/output.css\" rel=\"stylesheet\"><!-- This is the flowbite darkmode script --><script>\n    // On page load or when changing themes, best to add inline in `head` to avoid FOUC\n    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  </script></head><body style=\"width: 100vw; height: 100vh; display: flex; justify-content: center; margin-top: 100px; background-color: rgb(48, 25, 52);\"><div id=\"app\"></div></body><script>\n  window.addEventListener(\"load\", async function () {\n    await Clerk.load();\n\n    if (Clerk.user) {\n\n      // If there is a user we want to \n      // Route to the dashboard\n      return window.location.href = 'http://localhost:42069/v1/dashboard';\n    }\n\n    document.getElementById(\"app\").innerHTML = `\n        <div id=\"sign-in\"></div>\n      `;\n    const signInDiv = document.getElementById(\"sign-in\");\n\n    Clerk.mountSignIn(signInDiv);\n  });\n</script></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
